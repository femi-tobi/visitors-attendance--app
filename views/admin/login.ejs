<!DOCTYPE html>
<html>
<head>
  <title>Admin Login | Visitor Management</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8" style="font-family: 'Inter', sans-serif;">
  <div class="max-w-md w-full space-y-8">
    <div>
      <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
        Admin Login
      </h2>
      <p class="mt-2 text-center text-sm text-gray-600">
        Sign in to manage staff records
      </p>
    </div>

    <!-- Debug Log Display -->
    <div id="debugLogs" class="bg-gray-800 text-green-400 p-4 rounded text-xs font-mono max-h-40 overflow-y-auto" style="display: none;">
      <div class="font-bold mb-2">Debug Logs:</div>
      <div id="logContent"></div>
    </div>

    <button onclick="toggleLogs()" class="text-xs text-gray-500 hover:text-gray-700">
      Toggle Debug Logs
    </button>

    <% if (locals.error) { %>
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
        <span class="block sm:inline"><%= error %></span>
      </div>
    <% } %>

    <% if (locals.errors) { %>
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
        <% errors.forEach(function(error) { %>
          <span class="block sm:inline"><%= error.msg %></span>
        <% }); %>
      </div>
    <% } %>

    <form class="mt-8 space-y-6" action="/admin/login" method="POST" id="loginForm">
      <div class="rounded-md shadow-sm -space-y-px">
        <div>
          <label for="username" class="sr-only">Username</label>
          <input id="username" name="username" type="text" required 
                 class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm" 
                 placeholder="Username">
        </div>
        <div>
          <label for="password" class="sr-only">Password</label>
          <input id="password" name="password" type="password" required 
                 class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm" 
                 placeholder="Password">
        </div>
      </div>

      <div>
        <button type="submit" id="loginButton"
                class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
          Sign in
        </button>
      </div>
    </form>

    <script>
      // Log capture system
      const logContent = document.getElementById('logContent');
      const originalLog = console.log;
      const originalError = console.error;
      
      function addLog(message, type = 'log') {
        const timestamp = new Date().toLocaleTimeString();
        const logEntry = document.createElement('div');
        logEntry.className = type === 'error' ? 'text-red-400' : 'text-green-400';
        logEntry.textContent = `[${timestamp}] ${message}`;
        logContent.appendChild(logEntry);
        logContent.scrollTop = logContent.scrollHeight;
        
        // Also log to console
        if (type === 'error') {
          originalError.call(console, message);
        } else {
          originalLog.call(console, message);
        }
      }
      
      function toggleLogs() {
        const logsDiv = document.getElementById('debugLogs');
        logsDiv.style.display = logsDiv.style.display === 'none' ? 'block' : 'none';
      }
      
      // Override console methods to capture logs
      console.log = function(...args) {
        addLog(args.join(' '));
      };
      
      console.error = function(...args) {
        addLog(args.join(' '), 'error');
      };

      document.getElementById('loginForm').addEventListener('submit', function(e) {
        e.preventDefault(); // Prevent normal form submission
        
        console.log('Login form submitted');
        console.log('Username:', document.getElementById('username').value);
        console.log('Password provided:', document.getElementById('password').value ? 'YES' : 'NO');
        
        // Show loading state
        const button = document.getElementById('loginButton');
        button.textContent = 'Signing in...';
        button.disabled = true;
        
        // Get form data properly
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;
        
        // Create URL-encoded data
        const formData = new URLSearchParams();
        formData.append('username', username);
        formData.append('password', password);
        
        console.log('Sending form data:', formData.toString());
        
        // Submit via AJAX
        fetch('/admin/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
          body: formData.toString()
        })
        .then(response => {
          console.log('Response status:', response.status);
          console.log('Response headers:', response.headers);
          return response.text();
        })
        .then(data => {
          console.log('Response data length:', data.length);
          console.log('Response data preview:', data.substring(0, 500));
          
          // Check if response contains error or success indicators
          if (data.includes('Invalid credentials') || data.includes('error') || data.includes('Invalid value')) {
            console.log('❌ Login failed - showing error page');
            // Show error in a more controlled way
            const errorDiv = document.createElement('div');
            errorDiv.className = 'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mt-4';
            errorDiv.innerHTML = `
              <strong>Login Failed!</strong><br>
              <small>Response: ${data.substring(0, 200)}...</small>
            `;
            document.getElementById('loginForm').appendChild(errorDiv);
            button.textContent = 'Sign in';
            button.disabled = false;
          } else if (data.includes('Admin Dashboard') || data.includes('admin')) {
            console.log('✅ Login successful - redirecting to dashboard');
            window.location.href = '/admin';
          } else {
            console.log('❓ Unexpected response - showing response info');
            const infoDiv = document.createElement('div');
            infoDiv.className = 'bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded mt-4';
            infoDiv.innerHTML = `
              <strong>Server Response:</strong><br>
              <small>Length: ${data.length} characters</small><br>
              <small>Preview: ${data.substring(0, 200)}...</small>
            `;
            document.getElementById('loginForm').appendChild(infoDiv);
            button.textContent = 'Sign in';
            button.disabled = false;
          }
        })
        .catch(error => {
          console.error('❌ Fetch error:', error);
          button.textContent = 'Sign in';
          button.disabled = false;
          
          const errorDiv = document.createElement('div');
          errorDiv.className = 'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mt-4';
          errorDiv.innerHTML = `
            <strong>Network Error:</strong><br>
            <small>${error.message}</small>
          `;
          document.getElementById('loginForm').appendChild(errorDiv);
        });
      });
      
      // Also log when button is clicked
      document.getElementById('loginButton').addEventListener('click', function(e) {
        console.log('Login button clicked');
      });
      
      // Keep console logs visible
      console.log('Login page loaded - logs will be preserved');
    </script>
  </div>
</body>
</html> 